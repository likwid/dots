# Some options from practical tmux: https://mutelight.org/practical-tmux
set -g mouse on

# Setup vi bindings for tmux
setw -g mode-keys vi

# C-b is not acceptable -- Vim uses it
unbind C-b
set -g prefix C-a

# Start Window Numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Faster Command Sequences, allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# # connected to the *session*, constrain window size to the maximum size of any 
# # client connected to *that window*. Much more reasonable.
# Commented out for iterm2
#setw -g aggressive-resize on

# Support modern terminal
set -g default-terminal "screen-256color"

# C-a C-a for the Last Active Window
bind a send-keys C-a
bind C-a last-window

# Clear pane
bind C-l send-keys C-l

# Highlight active window
# set-window-option -g window-status-current-bg red

# Setup the new pane, new window binds
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Use up and down arrows for temporary "maximize"
unbind Up; bind Up resize-pane -Z; unbind Down; bind Down resize-pane -Z

# Reload tmux configuration
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Allow vim navigation for panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind ` select-window -t 0

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# No idea what this does
set-option -g terminal-overrides 'xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'

# Better project name in status bar
set -g status-left-length 18
set -g status-left '#[fg=colour235,bg=colour75,bold] #S '

# Cosmetics
#set -g status-utf8 on  #Commented out via https://github.com/tmux/tmux/issues/230

set -g status-justify centre
set -g status-style bg=blue

set -g status-left "#[fg=white]#S #[fg=orange]#I #[fg=lightgray]#P"
set -g status-right "#[fg=white]%b %d #[fg=white]|#[fg=white]%l:%M %p"

setw -g window-status-bell-style fg=red
setw -g window-status-activity-style bold

setw -g window-status-format "#[fg=cyan]• #[fg=white]#I#[fg=cyan] #[fg=white]#12W"
setw -g window-status-current-format "#[fg=red]▶ #[fg=white]#I#[fg=red,bold] #[fg=white]#W"

set -g pane-border-style fg=colour238,bg=white
set -g pane-active-border-style fg=black,bg=white

set -g message-style fg=white,bg=black,bright

if-shell '[[ -e ~/.tmux.conf.local ]]' 'source-file ~/.tmux.conf.local'
